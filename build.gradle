
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.4.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'docker'

jar {
    baseName = 'gs-spring-boot-docker'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")

    // webjars
    compile('org.webjars:bootstrap:3.3.5')
    compile('org.webjars:jquery:2.1.4')
    compile('org.webjars:backbonejs:1.2.1')
    compile('org.webjars:underscorejs:1.8.3')
    compile('org.webjars:backbone-localstorage:1.1.0')

    // swagger
    compile("io.springfox:springfox-swagger2:2.1.1")
    compile('io.springfox:springfox-swagger-ui:2.1.1')

    testCompile("org.springframework.boot:spring-boot-starter-test")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

bootRun {
    jvmArgs = ["-Dlog.directory=.", "-Dlog.media=STDOUT"]
}

group = 'srohatgi'
task buildDocker(type: Docker, dependsOn: build) {
    push = true
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}
